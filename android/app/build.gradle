def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'


apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.spine.Iumlksd"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }


    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            crunchPngs false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }
    flavorDimensions "app"

    productFlavors {
        bloodmoney{
            dimension "app"
            resValue "string","app_name","SAVE ABDUL RAHIM"
            applicationId "com.spine.bloodmoney"
        }
        bocheyachakafund{
            dimension "app"
            resValue "string","app_name","BOCHE YACHAKA FUND"
            applicationId "com.spine.bocheyachakafund"
        }
        bloodmoney_monitor{
            dimension "app"
            resValue "string","app_name","MonitorAppBloodMoney"
            applicationId "com.spine.bloodmoneymonitor"
        }
        iuml_kasaragod_luanchApp{
            dimension "app"
            resValue "string","app_name","Launch App KSD"
            applicationId "com.spine.IumlksdluanchApp"
        }
        iuml_kasaragod_TvApp{
            dimension "app"
            resValue "string","app_name","TV APP KSD"
            applicationId "com.spine.IumlksdTvApp"
        }
        iuml_kasaragod_TvMonitorApp{
            dimension "app"
            resValue "string","app_name","TV APP KSD"
            applicationId "com.spine.IumlksdTvMonitorApp"
        }

        quaide_millatMonitor{
            dimension "app"
            resValue "string","app_name","Monitor IUML QMC"
            applicationId "com.spine.quaide_millatMonitor"
        }
        quaide_millatAdmin{
            dimension "app"
            resValue "string","app_name","ADMIN"
            applicationId "com.spine.quaide_millatAdmin"
        }
        quaide_millatTv{
            dimension "app"
            resValue "string","app_name","IUML QMC TV"
            applicationId "com.spine.quaide_millat_tv"
        }
        quaide_millatLaunch{
            dimension "app"
            resValue "string","app_name","QMC Launch"
            applicationId "com.spine.quaide_millat_launch"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:31.1.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics'
    implementation "com.squareup.okhttp3:okhttp:4.8.0"
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
    implementation('com.paytm.appinvokesdk:appinvokesdk:1.5.4'){
        exclude group: "com.squareup.okhttp3", module: 'okhttp3'
    }

//    implementation 'in.payu:payu-checkout-pro:1.8.2'

}
